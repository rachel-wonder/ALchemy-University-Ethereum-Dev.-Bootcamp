{"ast":null,"code":"var _jsxFileName = \"/Users/qiu/AU-Ethereum-Dev.-Bootcamp/Week 3 - Ethereum Block Explorer/src/App.js\",\n  _s = $RefreshSig$();\nimport { Alchemy, Network } from 'alchemy-sdk';\nimport { useEffect, useState } from 'react';\nimport './App.css';\n\n// Refer to the README doc for more information about using API\n// keys in client-side code. You should never do this in production\n// level code.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst settings = {\n  apiKey: process.env.REACT_APP_ALCHEMY_API_KEY,\n  network: Network.ETH_MAINNET\n};\n\n// In this week's lessons we used ethers.js. Here we are using the\n// Alchemy SDK is an umbrella library with several different packages.\n//\n// You can read more about the packages here:\n//   https://docs.alchemy.com/reference/alchemy-sdk-api-surface-overview#api-surface\nconst alchemy = new Alchemy(settings);\nfunction App() {\n  _s();\n  const [latestBlockNumber, setLatestBlockNumber] = useState();\n  const [latestTransactions, setLatestTransactions] = useState([]);\n  useEffect(() => {\n    async function getLatestBlockNumber() {\n      setLatestBlockNumber(await alchemy.core.getBlockNumber());\n    }\n    getLatestBlockNumber();\n  }, []);\n  useEffect(() => {\n    async function getLatestTransactions() {\n      const {\n        Transactions\n      } = await alchemy.core.getBlockWithTransactions(latestBlockNumber);\n      setLatestTransactions = {\n        Transactions\n      };\n    }\n    getLatestTransactions();\n  }, [latestBlockNumber]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\"Latest Block: \", latestBlockNumber, \"Latest Transactions: \", latestTransactions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"3H12uVKwn55rhfjQP3mtqq+ZYZI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Alchemy","Network","useEffect","useState","settings","apiKey","process","env","REACT_APP_ALCHEMY_API_KEY","network","ETH_MAINNET","alchemy","App","latestBlockNumber","setLatestBlockNumber","latestTransactions","setLatestTransactions","getLatestBlockNumber","core","getBlockNumber","getLatestTransactions","Transactions","getBlockWithTransactions"],"sources":["/Users/qiu/AU-Ethereum-Dev.-Bootcamp/Week 3 - Ethereum Block Explorer/src/App.js"],"sourcesContent":["import { Alchemy, Network } from 'alchemy-sdk';\nimport { useEffect, useState } from 'react';\n\nimport './App.css';\n\n// Refer to the README doc for more information about using API\n// keys in client-side code. You should never do this in production\n// level code.\nconst settings = {\n  apiKey: process.env.REACT_APP_ALCHEMY_API_KEY,\n  network: Network.ETH_MAINNET,\n};\n\n\n// In this week's lessons we used ethers.js. Here we are using the\n// Alchemy SDK is an umbrella library with several different packages.\n//\n// You can read more about the packages here:\n//   https://docs.alchemy.com/reference/alchemy-sdk-api-surface-overview#api-surface\nconst alchemy = new Alchemy(settings);\n\nfunction App() {\n  const [latestBlockNumber, setLatestBlockNumber] = useState();\n  const [latestTransactions, setLatestTransactions] = useState([]);\n\n  useEffect(() => {\n    async function getLatestBlockNumber() {\n      setLatestBlockNumber(await alchemy.core.getBlockNumber());\n    }\n\n    getLatestBlockNumber();\n  },[]);\n\n  useEffect(() => {\n    async function getLatestTransactions() {\n      const {Transactions} = await alchemy.core.getBlockWithTransactions(latestBlockNumber);\n      setLatestTransactions = {Transactions}; \n    }\n\n      getLatestTransactions();\n  },[latestBlockNumber]);\n\n\n\n  return <div className=\"App\">\n    Latest Block: {latestBlockNumber}\n    Latest Transactions: {latestTransactions}\n    </div>;\n\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,OAAO,EAAEC,OAAO,QAAQ,aAAa;AAC9C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAO,WAAW;;AAElB;AACA;AACA;AAAA;AACA,MAAMC,QAAQ,GAAG;EACfC,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,yBAAyB;EAC7CC,OAAO,EAAER,OAAO,CAACS;AACnB,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA,MAAMC,OAAO,GAAG,IAAIX,OAAO,CAACI,QAAQ,CAAC;AAErC,SAASQ,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGX,QAAQ,EAAE;EAC5D,MAAM,CAACY,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEhED,SAAS,CAAC,MAAM;IACd,eAAee,oBAAoB,GAAG;MACpCH,oBAAoB,CAAC,MAAMH,OAAO,CAACO,IAAI,CAACC,cAAc,EAAE,CAAC;IAC3D;IAEAF,oBAAoB,EAAE;EACxB,CAAC,EAAC,EAAE,CAAC;EAELf,SAAS,CAAC,MAAM;IACd,eAAekB,qBAAqB,GAAG;MACrC,MAAM;QAACC;MAAY,CAAC,GAAG,MAAMV,OAAO,CAACO,IAAI,CAACI,wBAAwB,CAACT,iBAAiB,CAAC;MACrFG,qBAAqB,GAAG;QAACK;MAAY,CAAC;IACxC;IAEED,qBAAqB,EAAE;EAC3B,CAAC,EAAC,CAACP,iBAAiB,CAAC,CAAC;EAItB,oBAAO;IAAK,SAAS,EAAC,KAAK;IAAA,6BACVA,iBAAiB,2BACVE,kBAAkB;EAAA;IAAA;IAAA;IAAA;EAAA,QAClC;AAEV;AAAC,GA5BQH,GAAG;AAAA,KAAHA,GAAG;AA8BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}